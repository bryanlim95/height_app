// This file contains a class for you to extend with your solution.

function MeasurementAppController()
{
    var self = this;

    // The CameraVideoPageController is a class that controls the camera 
    // video page.  This class provides a some useful methods you will
    // need to call:
    //     displayMessage(message):
    //         Causes a short message string to be displayed on the
    //         page for a brief period.  Useful for showing quick
    //         notifications to the user.  message is a plain string.
    //     setHeadsUpDisplayHTML(html):
    //         This will set or update the heads-up-display with the
    //         text given in the html argument.  Usually this should 
    //         just be a string with text and line breaks (<br />).
    //     addButtons(buttons):
    //         You give an array of objects describing buttons and 
    //         the page controller will create and style these for you.
    //         Button description objects should look like the following
    //         example:
    //          {
    //             title:   "Set cam height",   
    //             onClick: "measurementAppController.setCamHeight()",
    //             id:      "set-cam-height"  (optional)
    //          }
    //         Note you will need to have 'measurementAppController.'
    //         if you want the button to call back to a public method
    //         defined in your class when it is clicked.
    // This variable will be set in the cameraVideoPageInitialised()
    // method below which is automatically called by the app when it
    // as been loaded and is ready.
    var cameraVideoPageController = null;

    // [Your attributes...]
    
    // This method will be called with the CameraVideoPageController
    // as an argument when the page loads and is ready.
        this.cameraVideoPageInitialised = function(controller)
    {
        cameraVideoPageController = controller;
	     window.addEventListener("devicemotion", deviceMotionUpdate);
         
	    cameraVideoPageController.addButtons([
            {
                title: "Set Phone Height",
                onClick: "measurementAppController.setCamHeight()"
            },
		    {
                title: "Set Base Angle",
                onClick: "measurementAppController.setBaseAngle()"
            },  
            {
                title: "Set Apex Value",
                onClick: "measurementAppController.setApexValue()"
            },
		    {
                title: "Calculate",
                onClick: "measurementAppController.Calculate()"
            } 
			
        ]);
		
			this.setCamHeight = function()
            {
                var self = this
			    this.phoneheight = prompt("Enter your phone height in centimetres:")
		   
			}
			
			
		    this.setBaseAngle = function()
				 
				     {
					       this.baseangle = pitch
				           cameraVideoPageController.displayMessage(this.baseangle)


				     }
				
	
			
            
	    cameraVideoPageController.displayMessage("Welcome");
		
        
        // [Your code...]
			

 
       function deviceMotionUpdate(event)
         {
			
			 radtodeg= 180 / Math.PI
			 aX = event.accelerationIncludingGravity.x;
             aY = event.accelerationIncludingGravity.y;
             aZ = event.accelerationIncludingGravity.z;
    
             gX = aX / 9.8;
             gY = aY / 9.8;
             gZ = aZ / 9.8;
			 
            pitch = (Math.atan(-gY / gZ))*radtodeg
			base = baseangle
			 
			// var alpha = 0.5
			// var  fXg = gX * alpha + (fXg * (1.0 - alpha));
             //var  fYg = gY * alpha + (fYg * (1.0 - alpha));
            // var  fZg = gZ * alpha + (fZg * (1.0 - alpha));
            //Roll & Pitch Equations, including conversion to deg
           // double pitch = (Math.Atan2(-fYg, fZg) * 180.0) / Math.PI; 
           // double roll = (Math.Atan2(fXg, Math.Sqrt(fYg * fYg + fZg * fZg)) * 180.0) / Math.PI;
           // pitch = (pitch >= 0) ? (180 - pitch) : (-pitch - 180);
			
               
			   
			 cameraVideoPageController.setHeadsUpDisplayHTML("Pitch:" + pitch + '</br>'+ "Base" + base);
			 
         }
			
        
			
	  	
	
    }
	
    
    // [Your methods...]
}
